@use "sass:map";
@import "../styles/colors";

* {
  font-family: 'Roboto', sans-serif;
  scrollbar-color: map.get($colors, "secondary.main") rgba(0, 0, 0, 0);
  scrollbar-width: thin;
}

::-webkit-scrollbar {
  height: 6px;
  width: 6px;
}

::-webkit-scrollbar-track,
::-webkit-scrollbar-thumb {
  border-radius: 7.5px;
}

::-webkit-scrollbar-button {
  display: none;
}

::-webkit-scrollbar-thumb {
  background-color: map.get($colors, "secondary.main");
}

::-webkit-scrollbar-thumb:hover {
  background-color: map.get($colors, "secondary.dark");
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}

html, body, #app {
  height: 100vh;
  overflow: hidden;
}

button {
  border: none;
  border-radius: 2.5px;
  padding: .5em;
  cursor: pointer;
  user-select: none;

  & > * {
    vertical-align: middle;
  }

  & > .icon {
    margin-right: .25em;
    filter: invert(1);
  }

  &:focus {
    outline: none;
  }

  &:disabled {
    cursor: not-allowed;
  }
}

select {
  padding: .25em;
  border-color: map.get($colors-dark, "background.default");

  @media (prefers-color-scheme: dark) {
    background-color: map.get($colors-dark, "background.default");
    color: map.get($colors-dark, "text.primary");
  }

  @media (prefers-color-scheme: light) {
    background-color: map.get($colors-light, "background.default");
    color: map.get($colors-light, "text.primary");
  }
}

.btn-primary {
  background-color: map.get($colors, "secondary.dark");
  color: map.get($colors, "secondary.contrast");

  &:hover {
    background-color: map.get($colors, "secondary.main");
  }

  &:disabled {
    background-color: map.get($colors, "secondary.light");
  }
}

.text-error {
  color: map.get($colors, "error.main");
}

.is-unselectable {
  user-select: none;
}

.tag {
  border-radius: 5px;
  padding: .2em .33em;
  width: max-content;
}

.tag-success {
  background-color: map.get($colors, "success.main");
  color: map.get($colors, "success.contrast");
}

.tag-info {
  background-color: map.get($colors, "info.main");
  color: map.get($colors, "info.contrast");
}

.tag-warning {
  background-color: map.get($colors, "warning.main");
  color: map.get($colors, "warning.contrast");
}

.tag-error {
  background-color: map.get($colors, "error.main");
  color: map.get($colors, "error.contrast");
}

code {
  display: inline-block;
  width:100%;
  overflow: auto;
}
